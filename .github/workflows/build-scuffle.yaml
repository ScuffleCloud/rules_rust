name: Release Cargo-bazel
on:
  workflow_dispatch:
  push:
    branches:
      - scuffle-fork

defaults:
  run:
    shell: bash

jobs:
  builds:
    strategy:
      matrix:
        include:
          - runner: ubuntu-22.04
            os: linux
            arch: x86_64
          - runner: ubuntu-22.04-arm
            os: linux
            arch: arm64
          - runner: windows-2022
            os: windows
            arch: x86_64
          - runner: macos-13
            os: macos
            arch: x86_64
          - runner: macos-14
            os: macos
            arch: arm64
    runs-on: ${{ matrix.runner }}
    env:
        BIN_EXT: ${{ matrix.os == 'windows' && '.exe' || '' }}
    steps:
      - uses: actions/checkout@v5

      - name: Install rust toolchains for host
        run: |
          version="$(grep 'DEFAULT_RUST_VERSION =' ./rust/private/common.bzl | grep -o '[[:digit:].]\+')"
          rustup install "${version}"
          rustup override set "${version}"

      - name: Build cargo-bazel
        run: cargo build -r -p cargo-bazel
        working-directory: ./crate_universe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cargo-bazel-${{ matrix.os }}-${{ matrix.arch }}${{ env.BIN_EXT }}
          path: ./crate_universe/target/release/cargo-bazel${{ env.BIN_EXT }}

  release:
    needs: builds
    runs-on: ubuntu-22.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: commit-${{ github.sha }}
          name: "cargo-bazel build for ${{ github.sha }}"
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
